Tree Max Sum

You are given a tree with n nodes, numbered 1 to n. The ith node contains an integer A[i]. You need to select some nodes such that the following properties hold:

 - The total number of selected nodes doesn't exceed k;
 - The distance between any two selected nodes is at least h.

Let S be the set of selected nodes and let sum(S) be the sum of the values A[u] for all u in S.

What is the maximum possible value of sum(s)?

PS: The judging panel recommends not to use Python to solve this problem.

Input Format:
 - The first line contains an integer T, the number of test cases.
 - Then, T test cases follow:
    - The first line of the test case contains three space-separated integers n, k, and h.
    - The next line contains n space-separated integers A[1], A[2], ..., A[n].
    - The following n-1 lines each contains two space-separated integers u and v denoting an edge in the tree.

Output Format:
 - For each test case, print a single line containing a single integer denoting the maximum value of sum(s).

Constraints:
 - 1 <= T <= 100
 - 1 <= n <= 10^3
 - 1 <= k, h <= n
 - 1 <= A[i] <= 10^5
 - The sum of n over all test cases will not exceed 10^4

Sample:
Input:
3
9 2 2
6 7 11 1 12 15 4 6 10
1 2
1 3
2 4
2 6
3 5
6 7
6 8
5 9
9 3 2
6 7 11 1 12 15 4 6 10
1 2
1 3
2 4
2 6
3 5
6 7
6 8
5 9
9 9 2
6 7 11 1 12 15 4 6 10
1 2
1 3
2 4
2 6
3 5
6 7
6 8
5 9

Output:
27
36
38

